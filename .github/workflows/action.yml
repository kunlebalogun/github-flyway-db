name: 'Database Migration via GitHub Pipeline using Flyway'
 
on:
  push:
    branches:
      - main
      
env:
    SQLFLUFF_DIALECT: postgres
    DOCKER_IMAGE: redgate/flyway
    SCHEMAS: public
 
jobs:
  Continuous-Integration-Build:
    name: Continuous Integration Build
    runs-on: ubuntu-latest
 
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
               
      - name: Continuous Integration Flyway Clean Migrate
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_BUILD_URL }}"
          -user="${{ secrets.DB_BUILD_USERNAME }}"
          -password="${{ secrets.DB_BUILD_PASSWORD }}"
          -cleanDisabled=false clean migrate -schemas="${{ env.SCHEMAS }}"
      - name: Flyway Info
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_BUILD_URL }}"
          -user="${{ secrets.DB_BUILD_USERNAME }}"
          -password="${{ secrets.DB_BUILD_PASSWORD }}" 
          info -schemas="${{ env.SCHEMAS }}"
 
      - name: Flyway Info Production
        run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_PROD_USERNAME }}" 
          -password="${{ secrets.DB_PROD_PASSWORD }}"
          info -schemas="${{ env.SCHEMAS }}"
 
        
  Deploy-Test:
    name: Deploy Test
    needs: Continuous-Integration-Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.0.0
      
   
      - run: >-    
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_TEST_URL }}"
          -user="${{ secrets.DB_TEST_USERNAME }}"
          -password="${{ secrets.DB_TEST_PASSWORD }}"  
          info -schemas="${{ env.SCHEMAS }}"
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_TEST_URL }}"
          -user="${{ secrets.DB_TEST_USERNAME }}"
          -password="${{ secrets.DB_TEST_PASSWORD }}"   
          migrate -schemas="${{ env.SCHEMAS }}" -outOfOrder=true 
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_TEST_URL }}"
          -user="${{ secrets.DB_TEST_USERNAME }}"
          -password="${{ secrets.DB_TEST_PASSWORD }}"   
          info -schemas="${{ env.SCHEMAS }}"
 
  Deploy-Prod:
    name: Deploy Prod 
    needs: Deploy-Test
    runs-on: ubuntu-latest       
    steps:
      - name: Checkout
        uses: actions/checkout@v3.0.0
       
      - name: Upload report
        uses: actions/upload-artifact@v3.0.0
        with:
          name: Database Report
          path: reports/
          
      - run: >-           
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_PROD_USERNAME }}"
          -password="${{ secrets.DB_PROD_PASSWORD }}" 
          info -schemas="${{ env.SCHEMAS }}"
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_PROD_USERNAME }}"
          -password="${{ secrets.DB_PROD_PASSWORD }}" 
          migrate -schemas="${{ env.SCHEMAS }}" -outOfOrder=true
      - run: >-
          docker run --rm
          --volume ${{ github.workspace }}/conf:/flyway/conf
          --volume ${{ github.workspace }}/migrations:/flyway/sql:ro
          "${{ env.DOCKER_IMAGE }}"
          -url="${{ secrets.DB_PROD_URL }}"
          -user="${{ secrets.DB_PROD_USERNAME }}"
          -password="${{ secrets.DB_PROD_PASSWORD }}"
          info -schemas="${{ env.SCHEMAS }}"
